[changelog]
# A Tera template to be rendered as the changelog's footer.
# See https://keats.github.io/tera/docs/#introduction
header = """
# Changelog\n
"""
body = """
{% if version %}\
    ## {{ version | trim_start_matches(pat="v") }} - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## Unreleased
{% endif %}\
{% for commit in commits %}
  - {{ commit.committer.timestamp | date(format="%Y-%m-%d") }} {{ commit.message | split(pat="\n") | first | upper_first }}\
{% endfor %}


"""
footer = ""
trim = true
# Render body even when there are no releases to process.
render_always = true
postprocessors = [
    # Replace the placeholder <REPO> with a URL.
    { pattern = '<REPO>', replace = "https://github.com/formalsec/smtml" },
]

[git]
# Parse commits according to the conventional commits specification.
# See https://www.conventionalcommits.org
conventional_commits = false
commit_preprocessors = [
    # Replace issue numbers with link templates to be updated in `changelog.postprocessors`.
    { pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](<REPO>/issues/${2}))"},
    # Check spelling of the commit message using https://github.com/crate-ci/typos.
    # If the spelling is incorrect, it will be fixed automatically.
    # { pattern = '.*', replace_command = 'typos --write-changes -' },
]
commit_parsers = [
    { message = "^Merge", skip = true }
]
sort_commits = "newest"
