(ocamllex
 (modules lexer))

(menhir
 (modules parser))

(library
 (name smtml)
 (public_name smtml)
 (modules
  ast
  ;axioms
  cache
  cache_intf
  constructors_intf
  eval
  expr
  interpret
  interpret_intf
  lexer
  log
  mappings
  mappings_intf
  model
  num
  op_intf
  optimizer
  parser
  params
  parse
  solver
  solver_intf
  symbol
  ty
  utils
  value
  z3_mappings
  z3_mappings2)
 (private_modules lexer parser)
 (libraries hc z3 ocaml_intrinsics)
 (instrumentation
  (backend bisect_ppx --exclusions lib/bisect.exclude)
  (deps bisect.exclude)))

(library
 (wrapped false)
 (name smtml_colibri2)
 (public_name smtml.colibri2)
 (modules colibri2_mappings)
 (libraries
  smtml
  colibri2.core
  colibri2.solver
  colibri2.theories.bool
  colibri2.theories.quantifiers
  colibri2.theories.LRA
  colibri2.theories.LRA.stages.stage2
  colibri2.theories.fp)
 (optional))

(library
 (wrapped false)
 (name smtml_bitwuzla)
 (public_name smtml.bitwuzla)
 (modules bitwuzla_mappings)
 (libraries smtml bitwuzla-cxx)
 (optional))
