(ocamllex
 (modules lexer))

(menhir
 (modules parser))

(library
 (name encoding)
 (public_name encoding)
 (modules
  ast
  ;axioms
  ctor_intf
  eval_numeric
  expr
  interpret
  interpret_intf
  lexer
  log
  mappings_intf
  model
  num
  op_intf
  optimizer
  parser
  params
  parse
  solver
  solver_intf
  symbol
  ty
  value
  z3_mappings)
 (private_modules lexer parser)
 (libraries hc z3 ocaml_intrinsics)
 (instrumentation
  (backend bisect_ppx)))

(library
 (name colibri2_mappings)
 (public_name colibri2_mappings)
 (modules colibri2_mappings)
 (libraries
  encoding
  colibri2.core
  colibri2.solver
  colibri2.theories.bool
  colibri2.theories.quantifiers
  colibri2.theories.LRA
  colibri2.theories.LRA.stages.stage2
  colibri2.theories.fp)
 (optional))
